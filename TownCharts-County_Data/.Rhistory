binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 100)) +
xlab('Friend Count') +
ylab('Number of Users in Sample') +
ggtitle('Lines - Friend Count \n Group By Gender')
ggplot(data = subset(facebook,
!is.na(gender)),
aes(x = friend_count,
y = ..density../sum(..density..))) +
geom_freqpoly(aes(color = gender),
binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 200)) +
facet_wrap(~gender) +
xlab('Friend Count') +
ylab('% of Users in Sample') +
ggtitle('Lines - Friend Count \n Group By Gender')
ggplot(data = subset(facebook,
!is.na(gender)),
aes(x = gender,
y = friend_count)) +
geom_boxplot(color = 'blue') +
coord_cartesian(ylim = c(0, 1000)) +
xlab('Gender') +
ylab('Friend Count') +
ggtitle('Boxplots - Friend Count \n Group By Gender')
ggplot(data = subset(facebook,
!is.na(gender)),
aes(x = age,
y = friend_count)) +
geom_line(aes(color = gender),
stat = "summary",
fun.y = median) +
xlab('Age') +
ylab('Median Friend Count') +
ggtitle('Lines - Median Friend Count Vs. Age \n Group By Gender')
by(facebook$friendships_initiated, facebook$gender, summary)
ggplot(data = subset(facebook,
!is.na(gender)),
aes(x = gender,
y = friendships_initiated)) +
geom_boxplot(fill = 'light blue') +
coord_cartesian(ylim = c(0,150)) +
xlab('Gender') +
ylab('Friendships Initiated') +
ggtitle('Boxplots - Friendships Initiated \n Group By Gender')
by(facebook$www_likes, facebook$gender, sum)
ggplot(data = subset(facebook,
!is.na(gender)),
aes(x = www_likes,
y = ..count../sum(..count..))) +
geom_freqpoly(binwidth = .25,
aes(color = gender)) +
scale_x_log10() +
xlab('Number of Likes') +
ylab('% of Users in Sample') +
ggtitle('Lines - Number of Likes \n Group By Gender')
ggplot(data = facebook,
aes(x = tenure)) +
geom_histogram(binwidth = 30,
color = 'black',
fill = '#099DD9') +
xlab('Number of Days Using Facebook') +
ylab('Number of Users in Sample') +
ggtitle('Histogram - Days Using Facebook')
ggplot(aes(x = tenure/365), data = facebook) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 7), breaks = seq(1, 7, 1)) +
xlab('Number of Years Using Facebook') +
ylab('Number of Users in Sample') +
ggtitle('Histogram - Years Using Facebook')
with(subset(facebook, tenure >= 1), summary(friend_count/tenure))
facebook$prop_initiated <- facebook$friendships_initiated/facebook$friend_count
facebook$year_joined <- floor(2014 - facebook$tenure/365)
facebook$year_joined_bucket <- cut(facebook$year_joined,
c(2004, 2009, 2011, 2012, 2014))
ggplot(data = facebook,
aes(x = tenure,
y = prop_initiated)) +
geom_line(stat = "summary",
fun.y = median,
aes(color = year_joined_bucket)) +
geom_smooth() +
xlab('Number of Days Using Facebook') +
ylab('Proportion of Frienships Initiated') +
ggtitle('Line - Proportion of Frienships Initiated Vs. Days')
ggplot(data = subset(facebook,
tenure >= 1),
aes(x = tenure,
y = friendships_initiated/tenure)) +
geom_smooth(aes(color = year_joined_bucket)) +
xlab('Number of Days Using Facebook') +
ylab('Frienships Initiated / Day') +
ggtitle('Line - Frienships Initiated / Day \n Group By Year Joined')
ggplot(data = facebook,
aes(x = age)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = '#5760AB') +
scale_x_continuous(limits = c(10, 105),
breaks = seq(10, 105, 5)) +
xlab('Age (Years) of Facebook Users') +
ylab('Number of users in sample') +
ggtitle('Histogram - User Age')
facebook.friend_count_by_age <- facebook %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
facebook$age_with_months <- facebook$age + (1 - facebook$dob_month / 12)
facebook.friend_count_by_age_months <- facebook %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
age_with_months_groups <- group_by(facebook, age_with_months)
with(facebook, cor.test(age, friend_count, method = 'pearson'))
with(subset(facebook, age <= 70), cor.test(age, friend_count, method = 'pearson'))
with(subset(facebook, age <= 70), cor.test(age, friend_count, method = 'spearman'))
with(subset(facebook, age <= 70), cor.test(age, friend_count, method = 'kendall'))
ggplot(data = facebook,
aes(x = age,
y = friend_count)) +
coord_cartesian(xlim = c(13, 70),
ylim = c(0, 1000)) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'blue') +
geom_line(stat = 'summary',
fun.y = mean) +
geom_line(stat = 'summary',
fun.y = quantile,
fun.args = list(probs = .1),
linetype = 2,
color = 'orange') +
geom_line(stat = 'summary',
fun.y = quantile,
fun.args = list(probs = .5),
color = 'orange') +
geom_line(stat = 'summary',
fun.y = quantile,
fun.args = list(probs = .9),
linetype = 2,
color = 'orange') +
xlab('User Age') +
ylab('Friend Count') +
ggtitle('Scatterplot - Friend Count Vs. Age')
ggplot(data = subset(facebook.friend_count_by_age_months,
age_with_months < 71),
aes(x = age_with_months,
y = friend_count_mean)) +
geom_line(color = 'blue') +
xlab('User Age (years)') +
ylab('Mean Friend Count') +
ggtitle('Line - Mean Friend Count Vs. Age')
ggplot(data = facebook.friend_count_by_age,
aes(age, friend_count_mean)) +
geom_line(color = 'blue') +
xlim(13, 90) +
xlab('User Age') +
ylab('Friend Count (sqrt)') +
ggtitle('Smooth Line - Mean Friend Count Vs. Age')
ggplot(data = facebook,
aes(x = age,
y = friend_count)) +
geom_point(alpha = .1,
position = position_jitter(h = 0),
color = 'blue') +
xlim(13, 90) +
coord_trans(y = "sqrt") +
xlab('User Age (Years)') +
ylab('Friend Count (sqrt)') +
ggtitle('Scatterplot - Friend Count (sqrt) Vs. Age (Years)')
ggplot(data = subset(facebook,
!is.na(year_joined_bucket)),
aes(x = age,
y = friend_count)) +
geom_line(aes(color = year_joined_bucket),
stat = 'summary',
fun.y = median) +
geom_line(stat = 'summary',
fun.y = median,
linetype = 2) +
xlab('User Age (Years)') +
ylab('Median Friend Count') +
ggtitle('Lines - Median Friend Count Vs. Age \n Group By Year Joined')
ggplot(data = subset(facebook, !is.na(year_joined_bucket)),
aes(x = age, y = friend_count)) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = year_joined_bucket)) +
geom_line(stat = 'summary',
fun.y = mean,
linetype = 2) +
xlab('User Age (Years)') +
ylab('Mean Friend Count') +
ggtitle('Lines - Mean Friend Count Vs. Age \n Group By Year Joined')
ggplot(data = facebook,
aes(x = age,
y =friendships_initiated)) +
geom_jitter(alpha = .2,
color = 'light blue') +
xlim(13, 90) +
xlab('User Age (Years)') +
ylab('Friendships Initiated') +
ggtitle('Scatterplot - Friendships Initiated Vs. Age')
ggplot(data = facebook,
aes(x = age,
y = friendships_initiated)) +
geom_point(alpha = .2,
position = position_jitter(h = 0),
color = 'light blue') +
xlim(13, 90) +
coord_trans(y = "sqrt") +
xlab('User Age(Years)') +
ylab('Friendships Initiated (sqrt)') +
ggtitle('Scatterplot - \n Friendships Initiated (sqrt) Vs. Age')
summary(facebook$mobile_likes)
with(facebook, cor.test(age, mobile_likes, method = 'pearson'))
ggplot(data = facebook,
aes(x = www_likes_received,
y = likes_received)) +
geom_point(alpha = 0.1,
color = 'dark blue') +
geom_smooth(method = 'lm',
color = 'red') +
coord_cartesian(xlim = c(0, 12500),
ylim = c(0, 25000)) +
xlab('www Likes Received') +
ylab('Likes Received') +
ggtitle('Scatterplot - Likes Received Vs. www Likes Receieved')
cor.test(facebook$www_likes_received, facebook$likes_received, method = 'pearson')
ggplot(data = facebook,
aes(x = www_likes_received,
y = likes_received)) +
geom_point(color = 'dark blue') +
xlim(0, quantile(facebook$www_likes_received, 0.95)) +
ylim(0, quantile(facebook$likes_received, 0.95)) +
geom_smooth(method = 'lm', color = 'red') +
xlab('www Likes Received') +
ylab('Likes Received') +
ggtitle('Scatterplot - Likes Received Zoomed In')
theme_set(theme_minimal(20))
set.seed(1836)
facebook_subset <- facebook[, c(2,6:12)]
ggpairs(facebook_subset[sample.int(nrow(facebook_subset), 1000),])
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
birthdays <- read.csv('friends_birthdays.csv',
header = T,
row.names = 1,
check.names = T)
birthdays$Birthdate <- strptime(birthdays$Birthdate,
format = "%m/%d/%y")
row.names(birthdays)[birthdays$Birthdate == '2018-02-18']
birthdays$month <- as.numeric(format(birthdays$Birthdate,"%m"))
ggplot(data = birthdays,
aes(x = month)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(0, 13),
breaks = seq(0, 12, 1)) +
xlab('Month') +
ylab('Number of Friends') +
ggtitle('Histogram - Friends Birthday Months')
ggsave('Histogram-Birthday_Month.png')
birthdays$day <- as.numeric(format(birthdays$Birthdate,"%d"))
ggplot(data = birthdays,
aes(x = day)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(0, 32), breaks = seq(0, 32, 1)) +
xlab('Day of the Month') +
ylab('Number of Friends') +
ggtitle("Histogram - Friends Birthday's By Day")
ggsave('Histogram-Birthday_Day.png')
ggplot(data = birthdays,
aes(x = day)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(0, 32),
breaks = seq(0, 32, 1)) +
facet_wrap(~month) +
xlab('Day of Month') +
ylab('Number of Friends') +
ggtitle('Histograms - Birthday Day \n Group By Month')
ggsave('Histograms-Birthday_Day_By_Month.png')
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
age_of_marriage <- read.csv('age_of_marriage.csv',
header = T,
row.names = 1,
check.names = F)
summary(age_of_marriage)
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = .5) +
scale_x_continuous(limits = c(17, 33), breaks = seq(15, 35, 5)) +
xlab('Age of First Marriage') +
ylab('Number of Countries') +
ggtitle('')
ggsave('Histogram-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_freqpoly(binwidth = .1) +
scale_x_continuous(limits = c(17, 33), breaks = seq(15, 35, 5)) +
xlab('Age of First Marriage') +
ylab('Number of Countries') +
ggtitle('')
ggsave('Frequency-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(limits = c(17, 33), breaks = seq(15, 35, 5)) +
xlab('Age of First Marriage') +
ylab('Number of Countries') +
ggtitle('')
ggsave('Histogram-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(limits = c(15, 35), breaks = seq(15, 35, 5)) +
xlab('Age of First Marriage') +
ylab('Number of Countries') +
ggtitle('')
ggsave('Histogram-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 5)) +
xlab('Average Age at First Marriage') +
ylab('Number of Countries') +
ggtitle('')
ggsave('Histogram-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_freqpoly(binwidth = .5,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 5)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Line - Average Age at First Marriage')
ggsave('Frequency-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_freqpoly(binwidth = .5,
color = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 5)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Line - Average Age at First Marriage')
ggsave('Frequency-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_freqpoly(binwidth = 1,
color = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 5)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Line - Average Age at First Marriage')
ggsave('Frequency-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_freqpoly(binwidth = 1,
color = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Line - Average Age at First Marriage')
ggsave('Frequency-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage') +
ylab('Number of Countries') +
ggtitle('Histogram - Average Age at First Marriage')
ggsave('Histogram-Age_Marriage.png')
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
age_of_marriage <- read.csv('age_of_marriage.csv',
header = T,
row.names = 1,
check.names = F)
summary(age_of_marriage)
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage') +
ylab('Number of Countries') +
ggtitle('Histogram - Average Age at First Marriage')
ggsave('Histogram-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_freqpoly(binwidth = 1,
color = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Line - Average Age at First Marriage')
ggsave('Line-Age_Marriage.png')
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
age_of_marriage <- read.csv('age_of_marriage.csv',
header = T,
row.names = 1,
check.names = F)
summary(age_of_marriage)
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage By Country') +
ylab('Count of Countries') +
ggtitle('Histogram - Average Age at First Marriage')
ggsave('Histogram-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_freqpoly(binwidth = 1,
color = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage By Country') +
ylab('Count of Countries') +
ggtitle('Line - Average Age at First Marriage')
ggsave('Line-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Histogram - Average Age at First Marriage By Country')
ggsave('Histogram-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_freqpoly(binwidth = 1,
color = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Line - Average Age at First Marriage \n By Country')
ggsave('Line-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Histogram - Average Age at First Marriage \n By Country')
ggsave('Histogram-Age_Marriage.png')
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
age_of_marriage <- read.csv('age_of_marriage.csv',
header = T,
row.names = 1,
check.names = F)
summary(age_of_marriage)
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Histogram - Average Age at First Marriage \n By Country')
ggsave('Histogram-Age_Marriage.png')
ggplot(data = age_of_marriage, aes(x = Age)) +
geom_freqpoly(binwidth = 1,
color = 'blue') +
scale_x_continuous(limits = c(15, 35),
breaks = seq(15, 35, 1)) +
xlab('Average Age at First Marriage') +
ylab('Count of Countries') +
ggtitle('Line - Average Age at First Marriage \n By Country')
ggsave('Line-Age_Marriage.png')
library(ggplot2)
library(dplyr)
library(tidyr)
library(GGally)
library(reshape2)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
nci <- read.table('nci.tsv')
colnames(nci) <- c(1:64)
nci.long.samp <- melt(as.matrix(nci[1:200, ]))
names(nci.long.samp) <- c('gene', 'case', 'value')
head(nci.long.samp)
ggplot(data = nci.long.samp,
aes(y = gene, x = case, fill = value)) +
geom_tile() +
scale_fill_gradientn(colors = colorRampPalette(c('blue','red'))(100))
